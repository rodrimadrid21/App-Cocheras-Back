// <auto-generated />
using System;
using Data.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstacionamientoAustralApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241103225258_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Data.Entities.Cochera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deshabilitada")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Eliminada")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cocheras");
                });

            modelBuilder.Entity("Data.Entities.Estacionamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Costo")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("HoraEgreso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraIngreso")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCochera")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUsuarioEgreso")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUsuarioIngreso")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdCochera");

                    b.ToTable("Estacionamientos");
                });

            modelBuilder.Entity("Data.Entities.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Entities.Estacionamiento", b =>
                {
                    b.HasOne("Data.Entities.Cochera", "Cochera")
                        .WithMany()
                        .HasForeignKey("IdCochera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cochera");
                });
#pragma warning restore 612, 618
        }
    }
}
